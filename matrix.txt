#include<iostream>
using namespace std;

void make_matrix(int **matrix, const int n, const int s) {
	int** newmatrix = (int**)malloc(n * sizeof(int));
	for (int i = 0; i < n; i++) {
		newmatrix[i] = (int*)malloc(s * sizeof(int));
	}

	for (int i = 0; i < n; i++) {
		for (int j = 0; j < s; j++) {
			newmatrix[i][j] = 0;
		}
	}
			
	for (int i = s - 1; i >= 0; i--) {
		newmatrix[n - 1][i] = matrix[n - 1][i];
		for (int j = n - 2; j >= 0; j--) {
			newmatrix[j][i] = (matrix[j][i])*(newmatrix[j + 1][i]);
		}
	}
			

	for (int i = s - 2; i >= 0; i--) {
		for (int j = n - 1; j >= 0; j--) {
			newmatrix[j][i] *= (newmatrix[j][i + 1]);
		}
	}
		

	for (int i = 0; i < n; i++) {
		cout << "\n";
		for (int j = 0; j < s; j++) {
			cout << newmatrix[i][j] << " ";
		}
	}
		
}
int main() {
	int n;
	int s;
	cin >> n >> s;
	int** matrix = (int**)malloc(n * sizeof(int));
	for (int i = 0; i < n; i++) {
		matrix[i] = (int*)malloc(s * sizeof(int));
	}

	for (int i = 0; i < n; i++) {
		for (int j = 0; j < s; j++) {
			cin >> matrix[i][j];
		}
	}

	make_matrix(matrix, n, s);
		return 0;
}